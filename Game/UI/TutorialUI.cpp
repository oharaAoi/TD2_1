#include "TutorialUI.h"

TutorialUI::TutorialUI() {
}

TutorialUI::~TutorialUI() {
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　初期化処理
//////////////////////////////////////////////////////////////////////////////////////////////////

void TutorialUI::Init(const Vector3& playerPos) {
	adjust_ = AdjustmentItem::GetInstance();

	tutorialUI_.try_emplace("kari", std::make_unique<BaseGameObject>());
	tutorialUI_["kari"]->Init();
	tutorialUI_["kari"]->SetObject("UI_Plane.obj");
	tutorialUI_["kari"]->SetTexture("sky.png");
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　更新処理
//////////////////////////////////////////////////////////////////////////////////////////////////

void TutorialUI::Update() {
	for (auto& ui : tutorialUI_) {
		ui.second->Update();
	}
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　描画処理
//////////////////////////////////////////////////////////////////////////////////////////////////

void TutorialUI::Draw() const {
	for (const auto& ui : tutorialUI_) {
		ui.second->Update();
	}
}

void TutorialUI::LineUpUI() {
	tutorialUI_["kari"]->GetTransform()->SetTranslaion(offsetPos);
}

//////////////////////////////////////////////////////////////////////////////////////////////////
// ↓　編集
//////////////////////////////////////////////////////////////////////////////////////////////////
#ifdef _DEBUG
void TutorialUI::Debug_Gui() {
	if (ImGui::TreeNode("TutorialUI")) {
		ImGui::DragFloat3("offsetPos", &offsetPos.x, 0.1f);
		ImGui::TreePop();
	}
}
#endif